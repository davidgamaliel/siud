<?php

/**
 * Created by PhpStorm.
 * User: reals
 * Date: 4/21/2017
 * Time: 9:36 AM
 */
class TrxPenggunaanBensinCustom extends TrxPenggunaanBensin
{

    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        $defaultRule = parent::rules();
        $newRule = array(
            array('unit_kerja, keperluan, file_struk, jumlah_bensin, id_pemohon', 'required')  ,
//            array('MIN_REQUEST','numerical','integerOnly'=>true,'min'=>1,'max'=>9999999),
            //array('MAX_REQUEST','notLessThanMin')
        );

        return array_merge($defaultRule, $newRule);
    }

    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public function simpan($param) {
        $today = new DateTime();
        $this->attributes = $param;
        $this->id_pemohon = Yii::app()->user->getState('user_id');
        $file = CUploadedFile::getInstance($this,'file_struk');
        if(!is_null($file)) {
            $filename = 'strukbensin'.$today->format('THis').'.'.$file->getExtensionName();
            $file->saveAs(Yii::app()->basePath . '/data/struk_bensin/'.$filename);
            $this->file_struk = $filename;
        }
        if($this->validate())
            $this->save();
    }

    public function listLaporan() {
        $criteria = new CDbCriteria();
        return new CActiveDataProvider($this, array(
           'criteria'=> $criteria,
            'sort'=> array(
                'defaultOrder'=>'id asc'
            )
        ));
    }



    public function riwayatPenggunaan() {
        $criteria = new CDbCriteria();
        $criteria->compare('"t".id_pemohon',Yii::app()->user->getState('user_id'));
        return new CActiveDataProvider($this, array(
            'criteria'=> $criteria,
            'sort'=> array(
                'defaultOrder'=>'id asc'
            )
        ));
    }

    public static function tampilanTanggal($tanggal) {
        $arrayBulan = array(
            1 => 'Januari',
            2 => 'Februari',
            3 => 'Maret',
            4=> 'April',
            5 => 'Mei',
            6=> 'Juni',
            7 => 'Juli',
            8 => 'Agustus',
            9 => 'September',
            10 => 'Oktober',
            11 => 'November',
            12 => 'Desember',
        );
        //echo "<pre>";var_dump($tanggal);die;
        if(!is_null($tanggal) & !empty($tanggal)) {
            $temp = explode(' ',$tanggal);
            $tempTanggal = explode('-',$temp[0]);
            return ''. $tempTanggal[2] . ' ' . $arrayBulan[intval($tempTanggal[1])]  . ' ' . $tempTanggal[0];
        }
        else {
            return '';
        }
    }

    public function getAllBulanTahunPenggunaan() {
        $sql= "
            select distinct to_char(tanggal,'MM-YYYY') stampel, to_char(tanggal,'Month YYYY') stampel2
            from trx_penggunaan_bensin
        ";
        $command = Yii::app()->db->createCommand($sql);
        return $command->queryAll();
    }

    public function getTotalPenggunaanBensinDalam1Bulan($bulan) {
        $sql = "
            select sum(jumlah_bensin) total
            from trx_penggunaan_bensin
            where to_char(tanggal,'MM-YYYY') = "."'".$bulan."'";
        $command = Yii::app()->db->createCommand($sql);
        return $command->queryAll();
    }
}