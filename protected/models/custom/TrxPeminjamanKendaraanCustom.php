<?php

/**
 * Created by PhpStorm.
 * User: reals
 * Date: 3/12/2017
 * Time: 11:05 AM
 */
class TrxPeminjamanKendaraanCustom extends TrxPeminjamanKendaraan
{
    public $fileUpload;

    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        $defaultRule = parent::rules();
        $newRule = array(
            array('kendaraan_id, peminjam, waktu_mulai, waktu_selesai', 'required')  ,
//            array('MIN_REQUEST','numerical','integerOnly'=>true,'min'=>1,'max'=>9999999),
            //array('MAX_REQUEST','notLessThanMin')
        );

        return array_merge($defaultRule, $newRule);
    }

    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public function listPermohonan()
    {
        $criteria = new CDbCriteria;
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort'=>array(
                'defaultOrder'=>'id asc'
            )
        ));
    }

    public function listPeminjaman() {
        $criteria = new CDbCriteria;
        $criteria->compare('status',array(0,1));
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort'=>array(
                'defaultOrder'=>'id asc'
            )
        ));
    }

    public function simpan($param) {
        $today = new DateTime();
        $this->attributes = $param;
        $this->waktu_mulai = new CDbExpression("TO_TIMESTAMP(:mulai,'DD-MM-YYYY hh24:mi')", array(":mulai"=>$this->waktu_mulai));
        $this->waktu_selesai = new CDbExpression("TO_TIMESTAMP(:selesai,'DD-MM-YYYY hh24:mi')", array(":selesai"=>$this->waktu_selesai));
        $this->status = StatusPeminjaman::MENUNGGU_PERSETUJUAN;
        $this->kendaraan_id = intval($this->kendaraan_id);
        $this->peminjam = Yii::app()->user->getState('user_name');
        $file = CUploadedFile::getInstance($this,'nodin');
        $this->id_peminjam = Yii::app()->user->getState('user_id');
        if(!is_null($file)) {
            //echo '<pre>';var_dump($file->name);die;
            $filename = 'pinjamkendaraan'.$today->format('THis').'.'.$file->getExtensionName();
            $file->saveAs(Yii::app()->basePath . '/data/nodin_kendaraan/'.$filename);
            $this->nodin = $filename;
        }
//        echo "<Pre>";var_dump($this->getErrors());
//        echo "<pre>";var_dump($this->attributes);die;
        if($this->validate()) {
            $this->save();
            return true;
        }
        else {
            return false;
        }
    }

    public function setujuiPeminjaman() {
        $this->status = StatusPeminjaman::DISETUJUI;
        if($this->save()) {
            $result = array('status'=>'berhasil','id'=>$this->id);
            echo CJSON::encode($result);
        }
        else {
            $result = array('status'=>'gagal');
            echo CJSON::encode($result);
        }
    }

    public function tolakPeminjaman() {
        $this->status = StatusPeminjaman::DITOLAK;
        if($this->save()) {
            $result = array('status'=>'berhasil','id'=>$this->id);
            echo CJSON::encode($result);
        }
        else {
            $result = array('status'=>'gagal');
            echo CJSON::encode($result);
        }
    }

    public function listPinjamKendaraan() {
        $criteria = new CDbCriteria;
        $criteria->compare('status',array(0,1));
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort'=>array(
                'defaultOrder'=>'id asc'
            )
        ));
    }

    public function listPermohonanUser()
    {
        $criteria = new CDbCriteria;
        $criteria -> compare('"t".id_peminjam',Yii::app()->user->getState('user_id'));

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort'=>array(
                'defaultOrder'=>'id asc'
            )
        ));
    }

    public static function tampilanTanggal($tanggal) {
        $arrayBulan = array(
            1 => 'Januari',
            2 => 'Februari',
            3 => 'Maret',
            4=> 'April',
            5 => 'Mei',
            6=> 'Juni',
            7 => 'Juli',
            8 => 'Agustus',
            9 => 'September',
            10 => 'Oktober',
            11 => 'November',
            12 => 'Desember',
        );
        //echo "<pre>";var_dump($tanggal);die;
        if(!is_null($tanggal) & !empty($tanggal)) {
            $temp = explode(' ',$tanggal);
            $tempTanggal = explode('-',$temp[0]);
            return ''. $tempTanggal[2] . ' ' . $arrayBulan[intval($tempTanggal[1])]  . ' ' . $tempTanggal[0]. ' '.$temp[1];
        }
        else {
            return '';
        }
    }

    public function getListPeminjamanByIdKendaraan($id) {
        $today = new DateTime();
        $format = $today->format('d-m-y');
        $provider = new CActiveDataProvider($this, array(
            'criteria'=>array(
                'condition'=>"status=1 AND (waktu_mulai <= to_timestamp('" . $format . "' , 'DD-MM-YY') AND waktu_selesai >= to_timestamp('" . $format . "' , 'DD-MM-YY')) AND kendaraan_id = " . $id ."",
                'order'=>'waktu_mulai DESC',
            ),
        ));

        return $provider;
    }

    public function getAllTahunPeminjaman() {
        $result = array();
        $sql = "select distinct to_char(waktu_mulai, 'YYYY') as tahun
                from trx_peminjaman_kendaraan";
        $command = Yii::app()->db->createCommand($sql);
        $tahun = $command->queryAll();
        if($tahun) {
            foreach ($tahun as $value) {
                $result[$value['tahun']] = $value['tahun'];
            }
        }
        return $result;
    }

    public function getArrayAllKendaraan() {
        $sql = 'select nama from mst_kendaraan order by nama';
        $command = Yii::app()->db->createCommand($sql);
        return $command->queryAll();
    }

    public function getAllApprovedKendaraan($begin=null, $end=null)
    {
        $sql = 'select mk.nama, count(tpk.id)
                from trx_peminjaman_kendaraan tpk 
                     left join mst_kendaraan mk on mk.id = tpk.kendaraan_id
                     left join tref_status_permohonan tsp on tsp.id = tpk.status
                where tsp.nama = \'Disetujui\'';
        if($begin != null && $end != null) {
            $sql .= ' AND waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }

        $sql .= ' group by mk.nama';
        $command = Yii::app()->db->createCommand($sql);

        $result = $command->queryAll();
        return $result;
    }

    public function getAllDisapprovedKendaraan($begin=null, $end=null)
    {
        $sql = 'select mk.nama, count(tpk.id)
                from trx_peminjaman_kendaraan tpk 
                     left join mst_kendaraan mk on mk.id = tpk.kendaraan_id
                     left join tref_status_permohonan tsp on tsp.id = tpk.status
                where tsp.nama = \'Ditolak\'';
        if($begin != null && $end != null) {
            $sql .= ' AND waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }

        $sql .= ' group by mk.nama';
        $command = Yii::app()->db->createCommand($sql);

        $result = $command->queryAll();
        return $result;
    }

    public function getDetailAllApprovedDisapprovedKendaraanUntukLaporan($begin=null, $end=null) {
        $sql = 'select *
                from trx_peminjaman_kendaraan tpk 
                     left join tref_status_permohonan tsp on tsp.id = tpk.status
                where (tsp.nama = \'Disetujui\' OR tsp.nama = \'Ditolak\') ';
        if($begin != null && $end != null) {
            $sql .= ' AND waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }

        $command = Yii::app()->db->createCommand($sql);
        $result = $command->queryAll();
        $command = Yii::app()->db->createCommand('SELECT COUNT(*) from (' . $sql .') as foo');
        $count = $command->queryScalar();

        $model = new CArrayDataProvider($result, array( //or $model=new CArrayDataProvider($rawData, array(... //using with querAll...
            'keyField' => 'id',
            'totalItemCount' => $count,

            'sort' => array(
                'defaultOrder' => array(
                    'id' => CSort::SORT_DESC, //default sort value
                ),
            ),
            'pagination' => array(
                'pageSize' => 10,
            ),
        ));
        return $model;
    }

    public function getAllProcessedKendaraan($begin=null, $end=null)
    {
        $sql = 'select mk.nama, count(tpk.id)
                from trx_peminjaman_kendaraan tpk 
                     left join mst_kendaraan mk on mk.id = tpk.kendaraan_id
                     left join tref_status_permohonan tsp on tsp.id = tpk.status
                where tsp.nama = \'Diproses\'';
        if($begin != null && $end != null) {
            $sql .= ' AND waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }

        $sql .= ' group by mk.nama';
        $command = Yii::app()->db->createCommand($sql);

        $result = $command->queryAll();
        return $result;
    }

    public function getJumlahKendaraanSetuju($kendaraan,$begin = null, $end=null) {
        $sql = 'select count(tpk.id) as jumlah
                from mst_kendaraan mk left join trx_peminjaman_kendaraan tpk on mk.id = tpk.kendaraan_id
                where tpk.status = 1
                and mk.nama = \''.$kendaraan.'\'';
        if($begin != null && $end != null) {
            $sql .= ' AND tpk.waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }
        $command = Yii::app()->db->createCommand($sql);
        return $command->queryAll();
    }

    public function getJumlahKendaraanDitolak($kendaraan,$begin = null, $end=null) {
        $sql = 'select count(tpk.id) as jumlah
                from mst_kendaraan mk left join trx_peminjaman_kendaraan tpk on mk.id = tpk.kendaraan_id
                where tpk.status = 2
                and mk.nama = \''.$kendaraan.'\'';
        if($begin != null && $end != null) {
            $sql .= ' AND tpk.waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }
        $command = Yii::app()->db->createCommand($sql);
        return $command->queryAll();
    }
    public function getJumlahKendaraanDiproses($kendaraan,$begin = null, $end=null) {
        $sql = 'select count(tpk.id) as jumlah
                from mst_kendaraan mk left join trx_peminjaman_kendaraan tpk on mk.id = tpk.kendaraan_id
                where tpk.status = 3
                and mk.nama = \''.$kendaraan.'\'';
        if($begin != null && $end != null) {
            $sql .= ' AND tpk.waktu_mulai BETWEEN  to_timestamp(\'' . $begin . '\', \'YYYY-MM-DD\') AND to_timestamp(\'' . $end . '\', \'YYYY-MM-DD\')';
        }
        $command = Yii::app()->db->createCommand($sql);
        return $command->queryAll();
    }

    public static function validasiWaktuMulai($id) {
        $model = TrxPeminjamanKendaraanCustom::model()->findByPk($id);
        $sql="
                select 
                      count(*) peminjaman
                from trx_peminjaman_kendaraan
                where 
                (waktu_mulai <= to_timestamp(:waktuAwal,'YYYY-MM-DD hh24:mi')  and waktu_selesai >= to_timestamp(:waktuAwal,'YYYY-MM-DD hh24:mi'))
                and status = 1
                and kendaraan_id = :id_kendaraan 
                and id != ".$model->id;
        $data = Yii::app()->db->createCommand($sql);
        $data->bindValue(':waktuAwal',$model->waktu_mulai);
        $data->bindValue(':id_kendaraan',$model->kendaraan_id);
        $rawData = $data->queryAll();
        $count = $rawData[0]['peminjaman'];
        if(intval($count) > 0 ) {
            return false;
        } else {
            return true;
        }
    }

    public static function validasiWaktuSelesai($id) {
        $model = TrxPeminjamanKendaraanCustom::model()->findByPk($id);
        $sql="
                select 
                      count(*) peminjaman
                from trx_peminjaman_kendaraan
                where 
                (waktu_mulai <= to_timestamp(:waktuAwal,'YYYY-MM-DD hh24:mi')  and waktu_selesai >= to_timestamp(:waktuAwal,'YYYY-MM-DD hh24:mi'))
                and status = 1
                and kendaraan_id = :id_kendaraan 
                and id != ".$model->id;
        $data = Yii::app()->db->createCommand($sql);
        $data->bindValue(':waktuAwal',$model->waktu_selesai);
        $data->bindValue(':id_kendaraan',$model->kendaraan_id);
        $rawData = $data->queryAll();
        $count = $rawData[0]['peminjaman'];
        if(intval($count) > 0 ) {
            return false;
        } else {
            return true;
        }
    }
}