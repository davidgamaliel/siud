<?php

/**
 * Created by PhpStorm.
 * User: reals
 * Date: 3/12/2017
 * Time: 11:05 AM
 */
class TranPerbaikanInventarisCustom extends TranPerbaikanInventaris
{
    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        $defaultRule = parent::rules();
        /*$newRule = array(
            array('kendaraan_id, peminjam, waktu_mulai, waktu_selesai', 'required')  ,
//            array('MIN_REQUEST','numerical','integerOnly'=>true,'min'=>1,'max'=>9999999),
            //array('MAX_REQUEST','notLessThanMin')
        );*/

        return $defaultRule; //array_merge($defaultRule, $newRule);
    }

    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public function simpan($data)
    {
        $this->attributes = $data;
        $dateStr = strtotime($this->tanggal_laporan);
        $this->tanggal_laporan = new CDbExpression("TO_DATE('".$this->tanggal_laporan."', 'DD/MM/YYYY hh24:mi')");
        //$this->tanggal_laporan = date('d/m/Y G:i', $dateStr);//DateTime::createFromFormat('d/m/Y', $this->tanggal_laporan);
        $this->status = StatusPeminjaman::MENUNGGU_PERSETUJUAN;
        $this->user_id = Yii::app()->user->getState('user_id');
        /*echo "<pre>";
        var_dump($this->attributes);
        die();*/
//        echo "<Pre>";var_dump($this->getErrors());
//        echo "<pre>";var_dump($this->attributes);die;
        if($this->validate()) {
            $this->save();
            return true;
        }
        else {
            return false;
        }
    }

    public function listPermohonan()
    {
        $today = (new DateTime())->setTimeZone(new DateTimeZone('Asia/Jakarta'));
        $criteria = new CDbCriteria;
        $criteria->condition = "tanggal_laporan > ". "'" . $today->format('Y-m-d H:i') . "'";
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort'=>array(
                'defaultOrder'=>'tanggal_laporan desc'
            )
        ));
    }

    public static function tampilanTanggal($tanggal) {
        $arrayBulan = array(
            1 => 'Januari',
            2 => 'Februari',
            3 => 'Maret',
            4=> 'April',
            5 => 'Mei',
            6=> 'Juni',
            7 => 'Juli',
            8 => 'Agustus',
            9 => 'September',
            10 => 'Oktober',
            11 => 'November',
            12 => 'Desember',
        );
        //echo "<pre>";var_dump($tanggal);die;
        if(!is_null($tanggal) & !empty($tanggal)) {
            //$temp = explode('-',$tanggal);
            $tempTanggal = explode('-',$tanggal);
            return ''. $tempTanggal[2] . ' ' . $arrayBulan[intval($tempTanggal[1])]  . ' ' . $tempTanggal[0];
        }
        else {
            return '';
        }
    }
}