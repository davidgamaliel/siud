<?php
/**
 * Created by PhpStorm.
 * User: reals
 * Date: 7/12/2017
 * Time: 12:32 AM
 */

class NotifikasiCustom extends Notifikasi
{
    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        $defaultRule = parent::rules();
        $newRule = array(
//            array('MIN_REQUEST','numerical','integerOnly'=>true,'min'=>1,'max'=>9999999),
            //array('MAX_REQUEST','notLessThanMin')
        );

        return array_merge($defaultRule, $newRule);
    }

    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public static function insertRuangan($model) {
        //check if already row in notifikasi
        $modelNotif = NotifikasiCustom::model()->findByAttributes(array(
            'table_name'=>'tran_peminjaman_ruangan',
            'user_id'=> $model->id_user_peminjam,
            'table_pk'=>$model->id
            ));
        if ($modelNotif) {
            $modelNotif->status_id = $model->status_id;
            $modelNotif->save();
        }
        else {
            $newModel = new NotifikasiCustom();
            $newModel->user_id = $model->id_user_peminjam;
            $newModel->table_name = 'tran_peminjaman_ruangan';
            $newModel->status_id = $model->status_id;
            $newModel->table_pk = $model->id;
            $newModel->save();
        }
    }

    public static function insertKendaraan($model) {
        $modelNotif = TrxPeminjamanKendaraanCustom::model()->findByAttributes(array(
            'table_name'=>'trx_peminjaman_kendaraan',
            'user_id'=> $model->id_peminjam,
            'table_pk'=>$model->id
        ));
        if ($modelNotif) {
            $modelNotif->status_id = $model->status;
            $modelNotif->save();
        }
        else {
            $newModel = new NotifikasiCustom();
            $newModel->user_id = $model->id_peminjam;
            $newModel->table_name = 'trx_peminjaman_kendaraan';
            $newModel->status_id = $model->status;
            $newModel->table_pk = $model->id;
            $newModel->save();
        }
    }

    public static function deleteNotifikasi($user, $tabel) {
        NotifikasiCustom::model()->deleteAllByAttributes(array(
            'user_id'=> intval($user),
            'table_name'=>$tabel
        ));
    }
}
